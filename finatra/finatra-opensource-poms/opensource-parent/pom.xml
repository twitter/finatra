<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.twitter.finatra</groupId>
  <artifactId>opensource-parent</artifactId>
  <packaging>pom</packaging>
  <version>2.0.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <test.type>test-jar</test.type>

    <collections.version>0.0.90</collections.version>
    <twitter-common-base.version>0.0.101</twitter-common-base.version>
    <util-system-mocks.version>0.0.89</util-system-mocks.version>
    <twitter-common-quantity.version>0.0.86</twitter-common-quantity.version>
    <slf4j.version>1.7.7</slf4j.version>
    <jackson.version>2.4.4</jackson.version>
    <bijection.version>0.7.0</bijection.version>
    <guava.version>16.0.1</guava.version>
    <quartz.version>2.2.0</quartz.version>
    <guice.version>3.0</guice.version>
    <libthrift.version>0.8.0</libthrift.version>
    <zookeeper.version>3.4.2</zookeeper.version>
    <netty.version>3.10.0.Final</netty.version>
    <joda-time.version>2.5</joda-time.version>
    <scalaj-time.version>0.7</scalaj-time.version>
    <nscala-time.version>1.6.0</nscala-time.version>
    <joda-convert.version>1.2</joda-convert.version>
    <scalatest.version>2.2.3</scalatest.version>
    <specs2.version>2.3.12</specs2.version>
    <mockito.version>1.9.5</mockito.version>
    <junit.version>4.10</junit.version>
    <commons-codec.version>1.6</commons-codec.version>
    <commons-io.version>2.4</commons-io.version>
    <objenesis.version>1.2</objenesis.version>
    <findbugs-jsr305.version>2.0.1</findbugs-jsr305.version>
    <javax.inject.version>1</javax.inject.version>
    <gson.version>2.2.4</gson.version>
    <servlet-api.version>2.5</servlet-api.version>
    <protobuf-java.version>2.4.1</protobuf-java.version>
    <logback.version>1.0.13</logback.version>
    <grizzled-slf4j_2.10.version>1.0.2</grizzled-slf4j_2.10.version>
    <mustache.version>0.8.12.1</mustache.version>

    <twitter.server.version>1.9.0</twitter.server.version>
    <finagle.version>6.24.0</finagle.version>
    <util.version>6.23.0</util.version>
    <scrooge.version>3.17.0</scrooge.version>
  </properties>

  <!-- Dependency Management -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>twitter-server_${scala.suffix}</artifactId>
        <version>${twitter.server.version}</version>
      </dependency>

      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>finagle-stats_${scala.suffix}</artifactId>
        <version>${finagle.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>finagle-thrift_${scala.suffix}</artifactId>
        <version>${finagle.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>finagle-thriftmux_${scala.suffix}</artifactId>
        <version>${finagle.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>finagle-core_${scala.suffix}</artifactId>
        <version>${finagle.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>finagle-http_${scala.suffix}</artifactId>
        <version>${finagle.version}</version>
      </dependency>

      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>util-core_${scala.suffix}</artifactId>
        <version>${util.version}</version>
      </dependency>

      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>scrooge-runtime_${scala.suffix}</artifactId>
        <version>${scrooge.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>scrooge-core_${scala.suffix}</artifactId>
        <version>${scrooge.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>scrooge-serializer_${scala.suffix}</artifactId>
        <version>${scrooge.version}</version>
      </dependency>

      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>bijection-core_${scala.suffix}</artifactId>
        <version>${bijection.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>bijection-scrooge_${scala.suffix}</artifactId>
        <version>${bijection.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.twitter.common</groupId>
        <artifactId>collections</artifactId>
        <version>${collections.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter.common</groupId>
        <artifactId>base</artifactId>
        <version>${twitter-common-base.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter.common</groupId>
        <artifactId>util-system-mocks</artifactId>
        <version>${util-system-mocks.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twitter.common</groupId>
        <artifactId>quantity</artifactId>
        <version>${twitter-common-quantity.version}</version>
      </dependency>

      <!-- 3rdparty Dependencies -->

      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scalap</artifactId>
        <version>${scala.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.objenesis</groupId>
        <artifactId>objenesis</artifactId>
        <version>${objenesis.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.spullara.mustache.java</groupId>
        <artifactId>compiler</artifactId>
        <version>${mustache.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${findbugs-jsr305.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
        <exclusions>
          <exclusion>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Guice -->
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-assistedinject</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax.inject.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.thrift</groupId>
        <artifactId>libthrift</artifactId>
        <version>${libthrift.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.netty</groupId>
            <artifactId>netty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf-java.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
        <version>${netty.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${servlet-api.version}</version>
      </dependency>

      <!-- 3rdparty Jackson-->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-scala_${scala.suffix}</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-joda</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- 3rdparty Jodatime -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.nscala-time</groupId>
        <artifactId>nscala-time_${scala.suffix}</artifactId>
        <version>${nscala-time.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scalaj</groupId>
        <artifactId>scalaj-time_2.10.2</artifactId>
        <version>${scalaj-time.version}</version>
      </dependency>
      <dependency>
        <groupId>org.joda</groupId>
        <artifactId>joda-convert</artifactId>
        <version>${joda-convert.version}</version>
      </dependency>

      <!-- 3rdparty Logging -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.clapper</groupId>
        <artifactId>grizzled-slf4j_${scala.suffix}</artifactId>
        <version>${grizzled-slf4j_2.10.version}</version>
      </dependency>

      <!-- 3rdparty Commons -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.2.1</version>
      </dependency>

      <!-- 3rdparty Test -->
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.suffix}</artifactId>
        <version>${scalatest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.specs2</groupId>
        <artifactId>specs2_${scala.suffix}</artifactId>
        <version>${specs2.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.scalaz.stream</groupId>
            <artifactId>scalaz-stream_2.10</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scalaz.stream</groupId>
            <artifactId>scalaz-stream_${scala.suffix}</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.pegdown</groupId>
            <artifactId>pegdown</artifactId>
          </exclusion>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scalaz</groupId>
            <artifactId>scalaz-concurrent_${scala.suffix}</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scalacheck</groupId>
            <artifactId>scalacheck_${scala.suffix}</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.specs2</groupId>
            <artifactId>classycle</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.scalamacros</groupId>
            <artifactId>quasiquotes_${scala.suffix}</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- Common Dependencies -->
  <dependencies>

    <!-- Scala Library -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>

    <!-- Test Deps -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.suffix}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.specs2</groupId>
      <artifactId>specs2_${scala.suffix}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Logback added w/ scope runtime so it's available for test output -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/test/webapp</directory>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.6.1</version>
        </plugin>
        <plugin>
          <groupId>com.twitter</groupId>
          <artifactId>scrooge-maven-plugin</artifactId>
          <version>3.17.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.3.2</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <plugin>
          <groupId>com.ning.maven.plugins</groupId>
          <artifactId>maven-dependency-versions-check-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>
        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>1.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.9</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <!-- Compile w/ Java 7 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>7</source>
          <target>7</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <configuration>
              <recompileMode>incremental</recompileMode>
              <useZincServer>true</useZincServer>
              <args>
                <param>-language:_</param>
                <param>-g:vars</param>
                <param>-unchecked</param>
                <param>-deprecation</param>
                <param>-encoding</param>
                <param>utf8</param>
              </args>
              <javacArgs>
                <javacArg>-target</javacArg>
                <javacArg>7</javacArg>
                <javacArg>-source</javacArg>
                <javacArg>7</javacArg>
              </javacArgs>
            </configuration>
            <goals>
              <goal>add-source</goal>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <configuration>
              <args>
                <param>-language:_</param>
                <param>-g:vars</param>
                <param>-unchecked</param>
                <param>-deprecation</param>
                <param>-encoding</param>
                <param>utf8</param>
              </args>
              <javacArgs>
                <javacArg>-target</javacArg>
                <javacArg>7</javacArg>
                <javacArg>-source</javacArg>
                <javacArg>7</javacArg>
              </javacArgs>
            </configuration>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jvmArgs>
            <jvmArg>-Xmx2G</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>

      <!-- Use Scala-Test Plugin for Running Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <stdout>T</stdout>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Ensure consistent dependency versions -->
      <plugin>
        <groupId>com.ning.maven.plugins</groupId>
        <artifactId>maven-dependency-versions-check-plugin</artifactId>
        <configuration>
          <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
          <exceptions>
          </exceptions>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <configuration>
          <failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
          <failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
          <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
          <checkCompileClasspath>true</checkCompileClasspath>
          <checkRuntimeClasspath>true</checkRuntimeClasspath>
          <checkTestClasspath>true</checkTestClasspath>

          <exceptions>
            <exception>
              <conflictingDependencies>
                <dependency>
                  <groupId>com.github.spullara.mustache.java</groupId>
                  <artifactId>compiler</artifactId>
                </dependency>
                <dependency>
                  <groupId>com.twitter.finatra</groupId>
                  <artifactId>finatra-http</artifactId>
                </dependency>
              </conflictingDependencies>
              <classes>
                <class>com.twitter.mustache.ScalaObjectHandler</class>
              </classes>
            </exception>
            <exception>
              <conflictingDependencies>
                <dependency>
                  <groupId>org.mockito</groupId>
                  <artifactId>mockito-core</artifactId>
                </dependency>
                <dependency>
                  <groupId>org.specs2</groupId>
                  <artifactId>specs2_${scala.suffix}</artifactId>
                </dependency>
              </conflictingDependencies>
              <classes>
                <class>org.mockito.internal.invocation.ArgumentsProcessor</class>
                <class>org.mockito.internal.invocation.MatchersBinder</class>
              </classes>
            </exception>
          </exceptions>

          <!-- TODO: Cleanup ignored list -->
          <ignoredResources>
            <ignoredResource>\.?BUILD.*</ignoredResource>
            <ignoredResource>com/twitter/common/args/apt/cmdline\.arg\.info\.txt\.1</ignoredResource>
            <ignoredResource>com/twitter/servo/exceptions\.thrift</ignoredResource>
            <ignoredResource>config/decider\.yml</ignoredResource>
            <ignoredResource>logback\.xml</ignoredResource>
            <ignoredResource>logback-test\.xml</ignoredResource>
            <ignoredResource>index\.html</ignoredResource>

            <ignoredResource>coverage\.data</ignoredResource>
            <ignoredResource>findbugsExclude\.xml</ignoredResource>
            <ignoredResource>rootdoc.txt</ignoredResource>
          </ignoredResources>
        </configuration>
        <executions>
          <execution>
            <id>check</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.18.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.1</version>
      </plugin>
    </plugins>
  </reporting>

  <profiles>

    <!-- Scala 2.11 -->
    <profile>
      <id>2.11</id>
      <activation>
        <property>
          <name>2.11</name>
        </property>
      </activation>

      <properties>
        <scala.version>2.11.4</scala.version>
        <scala.suffix>2.11</scala.suffix>
        <test.suffix>_2.11</test.suffix>
      </properties>
    </profile>

    <!-- Scala 2.10 -->
    <profile>
      <id>2.10</id>
      <activation>
        <property>
          <name>!2.11</name>
        </property>
      </activation>

      <properties>
        <scala.version>2.10.4</scala.version>
        <scala.suffix>2.10</scala.suffix>
        <test.suffix>_2.10</test.suffix>
      </properties>

      <dependencies>
      </dependencies>
    </profile>

    <profile>
      <id>coverage</id>
      <activation>
        <property>
          <name>coverage</name>
        </property>
      </activation>

      <properties>
        <scoverage.plugin.version>1.0.2</scoverage.plugin.version>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.scoverage</groupId>
            <artifactId>scoverage-maven-plugin</artifactId>
            <version>${scoverage.plugin.version}</version>
            <configuration>
              <highlighting>true</highlighting>
            </configuration>
          </plugin>
        </plugins>
      </build>

      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>2.7</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>index</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>org.scoverage</groupId>
            <artifactId>scoverage-maven-plugin</artifactId>
            <version>${scoverage.plugin.version}</version>
          </plugin>
        </plugins>
      </reporting>
    </profile>
  </profiles>
</project>
